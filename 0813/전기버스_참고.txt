1. 방전될 때까지 이동
2. 충전기가 없는 경우 가능한 가장 먼 충전기로 이동

[충전기의 위치를 저장하는 방법 결정 ]
1, 3, 5, 7, 9에 있다면

1. 정류장 번호를 인덱스로한 배열에 충전기위 위치만 표시
stop []  = { 0, 1, 0, 1...} 또는 stop []  = { 1, 1, 0, 1...}

2. 충전기가 설치된 정류장 번호로 저장 (0번에서는 항상 
충전할 수 있음)
stop [] = {1, 3, 5, 7, 9} 또는 stop [] = {0, 1, 3, 5, 7, 9}

[방법 1]
stop [] = {0, 1, 3, 5, 7, 9}
stop[i]에 도착할 수 있는지 확인 - stop[1]~stop[M]
마지막 충전 위치 last (0부터 시작)
stop[i] - stop[last] <= K 인 조건이면 i에 도착 가능

우선 이웃한 충전기 사이가 K이내여야 함.
i번째 충전기까지 이동할 수 있는지 확인
stop[i] - stop[last]    <=  K
stop[1]-stop[0] -> 1 <=3, 가능하면 i 증가
stop[2]-stop[0] -> 3 <=3
stop[3]-stop[0] -> 5 <=3, 이동 불가능. last = 2(이전 충전기)
			충전횟수 1증가
stop[4]-stop[2] -> 4 <=3 이동 불가능. last = 3(i-1)
			충전횟수 1증가
...
처음부터 종점을 포함해 도착 가능 여부를 확인하면
stop [] = {0, 1, 3, 5, 7, 9, 10}

[방법2]
stop []  = { 0, 1, 0, 1...}
(1)현재위치i에서 i+K로 이동
(2)충전기가 있으면 충전, 현재 위치를 i로 바꾸고 (1) 반복
(3)충전기가 없으면 i+K에서 충전기가 나올때까지 -1씩 이동
=> i까지 감소하기 전에 충전기가 나오면 (2)를 실행
=> i가 되면 진행 불가
